import re

    


with open('C:\\Users\\Alexis\\Documents\\Advent of Code\\Day 19\\input') as file:
    
    rulepattern=re.compile("(.*)\s=>\s(.*)")
    
    rules={}

    
    for line in file:
        line=line.strip()
        if re.match(rulepattern, line):
            rule=re.search(rulepattern, line)
            try:
                rules[rule.group(1)].append(rule.group(2))
            except KeyError:
                rules[rule.group(1)]=[rule.group(2)]
        else:
            initial=line
    
    #print(rules)    
            
    nontermPattern=re.compile("(e|[A-Z][a-z]?)")
    
    productions=[['e',0]]
    
    symbols=set()
    
    for lst in list(rules.values()):
        for val in lst:
            for m in re.findall(nontermPattern, val):
                symbols.add(m)
    
    terminals=[]
    
    for s in symbols:
        if s not in rules:
            terminals.append(s)
    
    print(rules.keys())
    print(terminals)
    
        
    strings=set(['e'])
    
    found=False
    
    while not found:
        for prod in productions:
            if prod[0]==initial:
                found=True
                #print(prod[1])
                break
            if prod[1]>=0:
                for m in re.finditer(nontermPattern, prod[0]):
                    try:
                        for rule in rules[m.group()]:
                            newString=prod[0][:m.start()]+rule+prod[0][m.end():]
                            if len(newString)<=len(initial) and newString not in strings:
                                #print(newString)
                                strings.add(newString)
                                productions.append([newString, prod[1]+1])
                    except KeyError:
                        pass  
            prod[1]=-1
   
           
    
            